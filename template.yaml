AWSTemplateFormatVersion: 2010-09-09

Resources:

  TweetsDynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: Tweets
      AttributeDefinitions:
        - AttributeName: user
          AttributeType: S
        - AttributeName: extractionTime
          AttributeType: 'N'
      KeySchema:
        - AttributeName: user
          KeyType: HASH
        - AttributeName: extractionTime
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  ScrapperRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /

  GetCurrentUserDataRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /

  TweetsReaderRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /

  InvokeScrapingPolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn: TweetsDynamoDBTable
    Properties:
      PolicyName: InvokeScrapingPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - 'lambda:InvokeFunction'
            - 'lambda:InvokeAsync'
          Resource: '*'
      Roles:
        - !Ref GetCurrentUserDataRole

  ReadParametersPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: ReadParametersPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - 'ssm:GetParameterHistory'
            - 'ssm:GetParametersByPath'
            - 'ssm:GetParameters'
            - 'ssm:GetParameter'
          Resource: '*'
      Roles:
        - !Ref ScrapperRole
        - !Ref GetCurrentUserDataRole

  ReadTweetsPolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn: TweetsDynamoDBTable
    Properties:
      PolicyName: ReadTweetsPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - 'dynamodb:Scan'
            - 'dynamodb:Describe*'
            - 'dynamodb:Get*'
            - 'dynamodb:Query'
            - 'dynamodb:List*'
          Resource: !GetAtt 
            - TweetsDynamoDBTable
            - Arn
      Roles:
        - !Ref TweetsReaderRole
        - !Ref GetCurrentUserDataRole

  WriteTweetsPolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn: TweetsDynamoDBTable
    Properties:
      PolicyName: WriteTweetsPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - 'dynamodb:BatchWriteItem'
            - 'dynamodb:PutItem'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:UpdateTable'
          Resource: !GetAtt 
            - TweetsDynamoDBTable
            - Arn
      Roles:
        - !Ref ScrapperRole


  TwitterAPIExtractor:
    Type: 'AWS::Lambda::Function'
    DependsOn:
      - ScrapperRole
    Properties:
      FunctionName: TwitterAPIExtractor
      Runtime: python3.8
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - ScrapperRole
        - Arn
      Code:
        S3Bucket: danonki-code
        S3Key: twitter_api_extractor.zip

  ParameterConsumerKey:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: consumer_key
      Type: String
      Value: None

  ParameterConsumerSecret:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: consumer_secret
      Type: String
      Value: None
