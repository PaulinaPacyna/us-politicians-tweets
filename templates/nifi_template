AWSTemplateFormatVersion: 2010-09-09
Description: Deploys a single instance of NiFi.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  NiFiInstanceType:
    Description: >-
      NiFi EC2 instance type. For test it can be t2.micro, however a t2.large is
      recommended in production.
    Type: String
    Default: t2.micro
  NiFiAMI:
    Description: >-
      Instance AMI - by default Ubuntu 18. Changing this may require changes in
      user data (in template)
    Type: String
    Default: ami-0747bdcabd34c712a
  Location:
    Description: The IP address range that can be used for NiFi and SSH.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  NiFi1Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref NiFiInstanceType
      SecurityGroupIds:
        - !Ref NiFiInstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref NiFiAMI
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              sudo su ;
            - >
              exec > >(tee /var/log/user-data.log|logger -t user-data -s
              2>/dev/console) 2>&1
            - |
              apt-get update -y 
            - |
              apt install openjdk-8-jre-headless -y; 
            - >
              echo -e "\nJAVA_HOME=\"/usr/lib/jvm/java-11-openjdk-amd64\"\n" >>
              /etc/environment; 
            - |
              source /etc/environment; 
            - >
              wget
              https://archive.apache.org/dist/nifi/1.13.2/nifi-1.13.2-bin.tar.gz
              ;
            - |
              tar -xvf  nifi-1.13.2-bin.tar.gz;
            - |
              cd nifi-1.13.2/;
            - >
              sed -i 's/nifi.web.http.host=127.0.0.1/nifi.web.http.host=/'
              ./conf/nifi.properties;
            - |
              ./bin/nifi.sh start; 
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 8f7f4819-ef73-4acf-8fa6-2c4959545d1f
  NiFiInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Group for NiFi instances
      SecurityGroupIngress:
        - IpProtocol: tcp
          ToPort: '8080'
          FromPort: '8080'
          CidrIp: !Ref Location
        - IpProtocol: tcp
          ToPort: '22'
          FromPort: '22'
          CidrIp: !Ref Location
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 85dab07c-2417-4eb4-8b2a-a07c80bf0643
Outputs:
  NiFiVersion:
    Description: NiFi Version
    Value: 1.13.2
Metadata:
  'AWS::CloudFormation::Designer':
    85dab07c-2417-4eb4-8b2a-a07c80bf0643:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
    8f7f4819-ef73-4acf-8fa6-2c4959545d1f:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 90
      z: 1
      embeds: []
      isassociatedwith:
        - 85dab07c-2417-4eb4-8b2a-a07c80bf0643

